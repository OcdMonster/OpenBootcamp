//En el archivo index.js crea una función que devuelva un error con un mensaje personalizado

const miFuncion = val => {
    if(typeof val === "number") {
        console.log(2*val)
        
    }
    throw new Error("El valor debe ser tipo numero");
}
const Double = miFuncion("Perro");

//Registra el error en un archivo a través de un try...catch
const numero = 8;

try { 
    const doble = miFuncion(Pez)
    console.log(doble);
    console.log("Esta ejecutandose de manera correcta")
} catch(e) {
    console.error("ERROR!")
}

//Instala la dependencia Winston
const winston = require('winston');

const logger = winston.createLogger({
  level: 'debug',
  format: winston.format.json(),
  defaultMeta: { service: 'user-service' },
  transports: [
    //
    // - Write all logs with importance level of `error` or less to `error.log`
    // - Write all logs with importance level of `info` or less to `combined.log`
    //
    new winston.transports.Console(),
    new winston.transports.File({ filename: 'error.log', level: 'error' }),
    new winston.transports.File({ filename: 'combined.log' }),
  ],
});

//Crea un nuevo proyecto de Node
//logger.log("Hola estoy saliendo por pantalla")
logger.info("Mensaje informativo")
logger.warn("mensaje de advertencia")
logger.error("mensaje de error")
logger.debug("esto es un debug")
